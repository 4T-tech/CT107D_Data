C51 COMPILER V9.56.0.0   TIM                                                               01/25/2025 16:34:52 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TIM
OBJECT MODULE PLACED IN .\Objects\tim.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE tim.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEFINE(PCF8591) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\tim.lst) TABS(2) OBJECT(.\Objects\tim.obj)

line level    source

   1          sfr  TCON = 0x88;
   2          sfr  TMOD = 0x89;
   3          sfr  AUXR = 0x8E;
   4          sfr  TL1  = 0x8B;
   5          sfr  TH1  = 0x8D;
   6          sbit TR1  = TCON^6;
   7          sbit TF1  = TCON^7;
   8          
   9          sfr  IE   = 0xA8;
  10          sbit ET1  = IE^3;
  11          sbit EA   = IE^7;
  12          
  13          sfr  TL0  = 0x8A;
  14          sfr  TH0  = 0x8C;
  15          sbit TR0  = TCON^4;
  16          
  17          void T1_Init(void)                    // 1毫秒@12.000MHz
  18          {
  19   1        AUXR &= 0xBF;                       // 定时器时钟12T模式
  20   1        TMOD &= 0x0F;                       // 设置定时器模式
  21   1        TL1 = 0x18;                         // 设置定时初值（24）
  22   1        TH1 = 0xFC;                         // 设置定时初值（252）
  23   1        TF1 = 0;                            // 清除TF1标志
  24   1        TR1 = 1;                            // 定时器1开始计时
  25   1        ET1 = 1;                            // 允许T1中断
  26   1        EA  = 1;                            // 允许系统中断
  27   1      }
  28          
  29                 unsigned int  uiTms;           // 毫秒值
  30          extern unsigned int  uiSec;           // 秒值
  31          extern unsigned int  uiSeg_Dly;       // 显示刷新延时
  32          extern unsigned char ucSeg_Dly;       // 显示移位延时
  33          extern unsigned char ucKey_Dly;       // 按键刷新延时
  34          extern unsigned int  uiFreq;          // 频率值
  35          extern unsigned char ucLed_Dly;       // LED刷新延时
  36          extern unsigned int  uiData_Dly;      // 数据刷新延时
  37          void T1_Proc(void) interrupt 3
  38          {
  39   1        if (++uiTms == 1000)                // 1s时间到
  40   1        {
  41   2          uiFreq = (TH0 << 8) + TL0;
  42   2          TL0 = 0;
  43   2          TH0 = 0;
  44   2          uiTms = 0;
  45   2          uiSec++;
  46   2        }
  47   1        uiSeg_Dly++;
  48   1        ucSeg_Dly++;
  49   1        ucKey_Dly++;
  50   1        ucLed_Dly++;
  51   1        uiData_Dly++;
  52   1      }
  53          
  54          sfr  CCON   = 0xD8;                     // PCA控制寄存器
C51 COMPILER V9.56.0.0   TIM                                                               01/25/2025 16:34:52 PAGE 2   

  55          sfr  CL      = 0xE9;                  // PCA低8位定时值
  56          sfr  CH      = 0xF9;                  // PCA高8位定时值
  57          sbit CR     = CCON^6;                 // PCA运行控制位
  58          sbit CF     = CCON^7;                 // PCA溢出标志位
  59          
  60          sfr  P1     = 0x90;
  61          sbit TX     = P1^0;
  62          sbit RX     = P1^1;
  63          
  64          unsigned char Dist_Meas(void)
  65          {
  66   1        unsigned char ucNum = 10;
  67   1      
  68   1        // TX引脚发送40KHz方波信号驱动超声波发送探头
  69   1        TX = 0;
  70   1        CL = 0xf4;                            // 设置PCA低8位定时值
  71   1        CH = 0xff;                            // 设置PCA高8位定时值
  72   1        CR = 1;                               // 启动PCA
  73   1        while (ucNum--)
  74   1        {
  75   2          while (!CF);                        // 等待PCA定时时间到
  76   2          TX ^= 1;                            // 翻转TX
  77   2          CL = 0xf4;                          // 重置PCA低8位定时值
  78   2          CH = 0xff;                          // 重置PCA高8位定时值
  79   2          CF = 0;
  80   2        }
  81   1        CR = 0;                               // 关闭PCA
  82   1        // 接收计时
  83   1        CL = 0;                               // 设置PCA低8位定时值
  84   1        CH = 0;                               // 设置PCA高8位定时值
  85   1        CR = 1;
  86   1        while(RX && !CF);                   // 等待下降沿
  87   1        CR = 0;
  88   1        return ((CH<<8)+CL)*0.017;          // 计算距离：340*100/1000000/2
  89   1      }
  90          
  91          void T0_Init(void) 
  92          {
  93   1        TMOD |= 5;                            // 设置T0为16位计数方式
  94   1        TR0 = 1;                              // 启动T0
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    216    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
