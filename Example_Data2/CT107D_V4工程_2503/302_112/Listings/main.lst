C51 COMPILER V9.56.0.0   MAIN                                                              01/24/2025 19:36:02 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEFINE(PCF8591) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "tim.h"
   2          #include "seg.h"
   3          #include <stdio.h>
   4          #include "key.h"
   5          #include "ds1302.h"
   6          #include "ds18B20.h"
   7          #include "i2c.h"
   8          
   9          unsigned int  uiTms;                // 毫秒值
  10          unsigned int  uiSec;                // 秒值
  11          unsigned char ucState;              // 系统状态
  12          unsigned char pucRtc[3] = {0x16, 0x59, 0x50};
  13          unsigned int  uiTemp;               // 温度值
  14          unsigned char ucAdc;                // ADC值
  15          unsigned char ucRds, ucRdt;         // 亮暗状态
  16          unsigned char ucHour=17, ucHour1=17;  // 时间参数
  17          unsigned char ucTemp=25, ucTemp1=25;  // 温度参数
  18          unsigned char ucLedp=4,  ucLedp1=4;   // LED参数
  19          
  20          void Seg_Proc(void);
  21          void Key_Proc(void);
  22          void Led_Proc(void);
  23          // 主函数
  24          void main(void)
  25          {
  26   1        Close_Peripheral();
  27   1        T1_Init();
  28   1        DS1302_SetRtc(pucRtc);            // 设置RTC时钟
  29   1      
  30   1        while (1)
  31   1        {
  32   2          Seg_Proc();
  33   2          Key_Proc();
  34   2          Led_Proc();
  35   2        }
  36   1      }
  37          
  38          unsigned char pucSeg_Char[12];      // 显示字符
  39          unsigned char pucSeg_Code[8];       // 显示代码
  40          unsigned char ucSeg_Pos;            // 显示位置
  41          unsigned int  uiSeg_Dly;            // 显示刷新延时
  42          unsigned char ucSeg_Dly;            // 显示移位延时
  43          void Seg_Proc(void)
  44          {
  45   1        if (uiSeg_Dly > 300)              // 300ms刷新1次
  46   1        {
  47   2          uiSeg_Dly = 0;
  48   2      
  49   2          switch (ucState)
  50   2          {
  51   3            case 0:                       // 显示时间
  52   3              sprintf(pucSeg_Char, "%02u-%02u-%02u",\
  53   3                (int)pucRtc[0], (int)pucRtc[1], (int)pucRtc[2]);
  54   3              break;
C51 COMPILER V9.56.0.0   MAIN                                                              01/24/2025 19:36:02 PAGE 2   

  55   3            case 1:                       // 显示温度
  56   3              sprintf(pucSeg_Char, "C    %03.1f", uiTemp/16.0);
  57   3              break;
  58   3            case 2:                       // 显示亮暗状态
  59   3              sprintf(pucSeg_Char, "E %3.2f%3u", ucAdc/51.0, (int)ucRds);
  60   3              break;
  61   3            case 0x10:                    // 显示时间参数
  62   3              sprintf(pucSeg_Char, "P1    %02u", (int)ucHour1);
  63   3              break;
  64   3            case 0x11:                    // 显示温度参数
  65   3              sprintf(pucSeg_Char, "P2    %02u", (int)ucTemp1);
  66   3              break;
  67   3            case 0x12:                    // 显示LED参数
  68   3              sprintf(pucSeg_Char, "P3     %1u", (int)ucLedp1);
  69   3          }
  70   2          Seg_Tran(pucSeg_Char, pucSeg_Code);
  71   2        }
  72   1        if (ucSeg_Dly >= 2)               // 2ms移位1次
  73   1        {
  74   2          ucSeg_Dly = 0;
  75   2      
  76   2          Seg_Disp(pucSeg_Code[ucSeg_Pos], ucSeg_Pos);
  77   2          ucSeg_Pos = ++ucSeg_Pos & 7;    // 数码管循环显示
  78   2        }
  79   1      }
  80          
  81          unsigned char ucKey_Old;            // 旧键值
  82          unsigned char ucKey_Dly;            // 按键刷新延时
  83          void Key_Proc(void)
  84          {
  85   1        unsigned char ucKey_Dn;           // 按下键值
  86   1      
  87   1        if (ucKey_Dly < 10)               // 10ms时间未到
  88   1          return;                         // 延时消抖
  89   1        ucKey_Dly = 0;
  90   1      
  91   1        ucKey_Dn = Key_Read();            // 键值读取
  92   1        if (ucKey_Dn != ucKey_Old)        // 键值变化
  93   1        {
  94   2          ucKey_Old = ucKey_Dn;
  95   2        } else {
  96   2          ucKey_Dn = 0;
  97   2        }
  98   1      
  99   1        switch (ucKey_Dn)
 100   1        {
 101   2          case 4:                         // S4按键
 102   2            ucState ^= 0x10;              // 切换数据和参数界面
 103   2            ucState &= ~3;
 104   2            ucState |= 2;
 105   2          case 5:                         // S5按键
 106   2            if ((++ucState & 3) == 3)     // 切换数据或参数子界面状态
 107   2              ucState &= ~3;
 108   2            ucHour = ucHour1;             // 保存参数
 109   2            ucTemp = ucTemp1;
 110   2            ucLedp = ucLedp1;
 111   2            break;
 112   2          case 8:                         // S8按键
 113   2            switch (ucState)              // 参数减1
 114   2            {
 115   3              case 0x10:                  // 修改时间参数
 116   3                if (ucHour1 > 0)
C51 COMPILER V9.56.0.0   MAIN                                                              01/24/2025 19:36:02 PAGE 3   

 117   3                  --ucHour1;
 118   3                else
 119   3                  ucHour1 = 23;
 120   3                break;
 121   3              case 0x11:                  // 修改温度参数
 122   3                if (ucTemp1 > 0)
 123   3                  --ucTemp1;
 124   3                else
 125   3                  ucTemp1 = 99;
 126   3                break;
 127   3              case 0x12:                  // 修改LED参数
 128   3                if (ucLedp1 > 4)
 129   3                  --ucLedp1;
 130   3                else
 131   3                  ucLedp1 = 8;
 132   3            }
 133   2            break;
 134   2          case 9:                         // S9按键
 135   2            switch (ucState)              // 参数加1
 136   2            {
 137   3              case 0x10:                  // 修改时间参数
 138   3                if (ucHour1 < 23)
 139   3                  ++ucHour1;
 140   3                else
 141   3                  ucHour1 = 0;
 142   3                break;
 143   3              case 0x11:                  // 修改温度参数
 144   3                if (ucTemp1 < 99)
 145   3                  ++ucTemp1;
 146   3                else
 147   3                  ucTemp1 = 0;
 148   3                break;
 149   3              case 0x12:                  // 修改LED参数
 150   3                if (ucLedp1 < 8)
 151   3                  ++ucLedp1;
 152   3                else
 153   3                  ucLedp1 = 4;
 154   3            }
 155   2        }
 156   1      }
 157          
 158          unsigned char ucLed;                // LED值
 159          unsigned int  uiLed_Dly;            // LED延时
 160          void Led_Proc(void)
 161          {
 162   1        unsigned long ulTime;
 163   1      
 164   1        if (uiLed_Dly < 500)              // 500ms刷新1次
 165   1          return;
 166   1        uiLed_Dly = 0;
 167   1      
 168   1        DS1302_GetRtc(pucRtc);
 169   1        pucRtc[0] = (pucRtc[0]>>4)*10 + (pucRtc[0]&0xf);
 170   1        pucRtc[1] = (pucRtc[1]>>4)*10 + (pucRtc[1]&0xf);
 171   1        pucRtc[2] = (pucRtc[2]>>4)*10 + (pucRtc[2]&0xf);
 172   1        ulTime = (pucRtc[0]*60+pucRtc[1])*60+pucRtc[2];
 173   1        if ((ulTime >= ucHour*3600) || (ulTime <= 8*3600))
 174   1          ucLed |= 1;
 175   1        else
 176   1          ucLed &= ~1;
 177   1      
 178   1        uiTemp = Temp_Read();
C51 COMPILER V9.56.0.0   MAIN                                                              01/24/2025 19:36:02 PAGE 4   

 179   1        if (uiTemp < (ucTemp<<4))
 180   1          ucLed |= 2;
 181   1        else
 182   1          ucLed &= ~2;
 183   1      
 184   1        ucAdc = PCF8591_Adc(1);
 185   1        if (ucAdc > 70)
 186   1        {
 187   2          ucRds = 0;                      // 亮状态
 188   2          ucLed &= ~(1 << (ucLedp-1));    // 熄灭指定的LED
 189   2        }
 190   1        else
 191   1        {
 192   2          ucRds = 1;                      // 暗状态
 193   2          ucLed |= 1 << (ucLedp-1);       // 点亮指定的LED
 194   2        }
 195   1        if (ucRds != ucRdt)
 196   1        {
 197   2          uiSec = 0;                      // 状态变化开始计时
 198   2          ucRdt = ucRds;
 199   2        }
 200   1        if (uiSec >=3)                    // 持续时间超过3s
 201   1          if (ucAdc > 140)
 202   1            ucLed &= ~4;
 203   1          else
 204   1            ucLed |= 4;
 205   1      
 206   1        Led_Disp(ucLed);                  // LED显示状态
 207   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    780    ----
   CONSTANT SIZE    =     71    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
