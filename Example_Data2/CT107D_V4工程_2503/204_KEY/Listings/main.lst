C51 COMPILER V9.56.0.0   MAIN                                                              01/24/2025 11:33:19 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          // 使用程序前，将J13调整为IO模式（2-3脚短接）
   2          #include "tim.h"
   3          #include "seg.h"
   4          #include <stdio.h>
   5          #include "key.h"
   6          
   7          unsigned int  uiTms;                  // 毫秒值
   8          unsigned int  uiSec;                  // 秒值
   9          unsigned char ucState;                // 系统状态
  10          
  11          void Led_Proc(void);
  12          void Seg_Proc(void);
  13          void Key_Proc(void);
  14          // 主函数
  15          void main(void)
  16          {
  17   1        Close_Peripheral();
  18   1        T1_Init();
  19   1        
  20   1        while (1)
  21   1        {
  22   2          T1_Proc();
  23   2          Seg_Proc();
  24   2          Key_Proc();
  25   2          Led_Proc();
  26   2        }
  27   1      }
  28          
  29          unsigned char pucSeg_Char[12];        // 显示字符
  30          unsigned char pucSeg_Code[8];         // 显示代码
  31          unsigned char ucSeg_Pos;              // 显示位置
  32          unsigned int  uiSeg_Dly;              // 显示刷新延时
  33          unsigned char ucSeg_Dly;              // 显示移位延时
  34          // 注意：sprintf()会在字符串后面添加”\0”，所以pucSeg_Buf[]的长度至少应为9。
  35          // 如果字符串中包含小数点，pucSeg_Buf[]的长度至少应为10。
  36          void Seg_Proc(void)
  37          {
  38   1        if (uiSeg_Dly > 300)                // 300ms刷新1次
  39   1        {
  40   2          uiSeg_Dly = 0;
  41   2      
  42   2          sprintf(pucSeg_Char, "%02x  %04u", (int)ucState, uiSec);
  43   2          Seg_Tran(pucSeg_Char, pucSeg_Code);
  44   2        }
  45   1        if (ucSeg_Dly >= 2)                 // 2ms移位1次
  46   1        {
  47   2          ucSeg_Dly = 0;
  48   2      
  49   2          Seg_Disp(pucSeg_Code[ucSeg_Pos], ucSeg_Pos);
  50   2          ucSeg_Pos = ++ucSeg_Pos & 7;      // 数码管循环显示
  51   2        }
  52   1      }
  53          
  54          unsigned char ucKey_Old;              // 旧键值
C51 COMPILER V9.56.0.0   MAIN                                                              01/24/2025 11:33:19 PAGE 2   

  55          unsigned char ucKey_Dly;              // 按键刷新延时
  56          unsigned int  uiKey_Dly=500;          // 双击或长按延时
  57          void Key_Proc(void)
  58          {
  59   1        unsigned char ucKey_Dn;             // 按下键值
  60   1        unsigned char ucKey_Up;             // 松开键值
  61   1      
  62   1        if(ucKey_Dly < 10)                  // 延时10ms消抖
  63   1          return;
  64   1        ucKey_Dly = 0;
  65   1      
  66   1        ucKey_Dn = Key_Read();              // 键值读取
  67   1        if (ucKey_Dn != ucKey_Old)          // 键值变化
  68   1        {
  69   2          ucKey_Up = ucKey_Old;             // 保存键值
  70   2          ucKey_Old = ucKey_Dn;
  71   2        } else {
  72   2          ucKey_Up = 0;                     // 清除键值
  73   2          ucKey_Dn = 0;
  74   2        }
  75   1      
  76   1        if (ucKey_Dn == 4)                  // S4按下
  77   1        {
  78   2          ucState ^= 0x10;                  // 修改主状态（L5翻转）
  79   2          if (uiKey_Dly < 500)              // S4双击
  80   2            ucState ^= 2;                   // 修改次状态（L2翻转）
  81   2          uiKey_Dly = 0;                    // 开始计时
  82   2        }
  83   1      
  84   1        if (ucKey_Up == 4)                  // S4松开
  85   1            ucState ^= 1;                   // 修改次状态（L1翻转）
  86   1        if ((ucKey_Old == 4) && (uiKey_Dly > 1000))
  87   1        {                                   // S4长按
  88   2          ucState ^= 4;                     // 修改次状态（L3翻转）
  89   2          uiKey_Dly = 0;                    // 重新计时
  90   2        }
  91   1      }
  92          
  93          void Led_Proc(void)
  94          {
  95   1        Led_Disp(ucState);
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    205    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
