C51 COMPILER V9.56.0.0   MAIN                                                              01/25/2025 07:23:11 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          // 使用程序前，将J13调整为IO模式（2-3脚短接）
   2          #include "tim.h"
   3          #include "seg.h"
   4          #include <stdio.h>
   5          #include "key.h"
   6          #include "ds1302.h"
   7          
   8          unsigned int  uiTms;                  // 毫秒值
   9          unsigned int  uiSec;                  // 秒值
  10          unsigned char ucState;                // 系统状态
  11          unsigned char pucRtc[3]={0x23, 0x59, 0x50};
  12          
  13          void Led_Proc(void);
  14          void Seg_Proc(void);
  15          void Key_Proc(void);
  16          // 主函数
  17          void main(void)
  18          {
  19   1        Close_Peripheral();
  20   1        T1_Init();
  21   1        DS1302_SetRtc(pucRtc);
  22   1        
  23   1        while (1)
  24   1        {
  25   2          Seg_Proc();
  26   2          Key_Proc();
  27   2          Led_Proc();
  28   2        }
  29   1      }
  30          
  31          unsigned char pucSeg_Char[12];        // 显示字符
  32          unsigned char pucSeg_Code[8];         // 显示代码
  33          unsigned char ucSeg_Pos;              // 显示位置
  34          unsigned int  uiSeg_Dly;              // 显示刷新延时
  35          unsigned char ucSeg_Dly;              // 显示移位延时
  36          // 注意：sprintf()会在字符串后面添加”\0”，所以pucSeg_Buf[]的长度至少应为9。
  37          // 如果字符串中包含小数点，pucSeg_Buf[]的长度至少应为10。
  38          void Seg_Proc(void)
  39          {
  40   1        if (uiSeg_Dly > 300)                // 300ms刷新1次
  41   1        {
  42   2          uiSeg_Dly = 0;
  43   2      
  44   2          switch (ucState & 0xf0)
  45   2          {
  46   3            case 0:                         // 显示T1时钟
  47   3              sprintf(pucSeg_Char, "1   %04u", uiSec);
  48   3              break;
  49   3            case 0x10:                      // 显示RTC时钟
  50   3              DS1302_GetRtc(pucRtc);        // 获取RTC时钟
  51   3              sprintf(pucSeg_Char, "2 %02x.%02x.%02x",\
  52   3                (int)pucRtc[0], (int)pucRtc[1], (int)pucRtc[2]);
  53   3          }
  54   2          Seg_Tran(pucSeg_Char, pucSeg_Code);
C51 COMPILER V9.56.0.0   MAIN                                                              01/25/2025 07:23:11 PAGE 2   

  55   2        }
  56   1        if (ucSeg_Dly >= 2)                 // 2ms移位1次
  57   1        {
  58   2          ucSeg_Dly = 0;
  59   2      
  60   2          Seg_Disp(pucSeg_Code[ucSeg_Pos], ucSeg_Pos);
  61   2          ucSeg_Pos = ++ucSeg_Pos & 7;      // 数码管循环显示
  62   2        }
  63   1      }
  64          
  65          unsigned char ucKey_Old;              // 旧键值
  66          unsigned char ucKey_Dly;              // 按键刷新延时
  67          unsigned int  uiKey_Dly=500;          // 双击或长按延时
  68          void Key_Proc(void)
  69          {
  70   1        unsigned char ucKey_Dn;             // 按下键值
  71   1        unsigned char ucKey_Up;             // 松开键值
  72   1      
  73   1        if(ucKey_Dly < 10)                  // 延时10ms消抖
  74   1          return;
  75   1        ucKey_Dly = 0;
  76   1      
  77   1        ucKey_Dn = Key_Read();              // 键值读取
  78   1        if (ucKey_Dn != ucKey_Old)          // 键值变化
  79   1        {
  80   2          ucKey_Up = ucKey_Old;             // 保存键值
  81   2          ucKey_Old = ucKey_Dn;
  82   2        } else {
  83   2          ucKey_Up = 0;                     // 清除键值
  84   2          ucKey_Dn = 0;
  85   2        }
  86   1      
  87   1        if (ucKey_Dn == 4)                  // S4按下
  88   1        {
  89   2          ucState ^= 0x10;                  // 修改主状态（L5翻转）
  90   2          if (uiKey_Dly < 500)              // S4双击
  91   2            ucState ^= 2;                   // 修改次状态（L2翻转）
  92   2          uiKey_Dly = 0;                    // 开始计时
  93   2        }
  94   1      
  95   1        if (ucKey_Up == 4)                  // S4松开
  96   1            ucState ^= 1;                   // 修改次状态（L1翻转）
  97   1        if ((ucKey_Old == 4) && (uiKey_Dly > 1000))
  98   1        {                                   // S4长按
  99   2          ucState ^= 4;                     // 修改次状态（L3翻转）
 100   2          uiKey_Dly = 0;                    // 重新计时
 101   2        }
 102   1      }
 103          
 104          void Led_Proc(void)
 105          {
 106   1        Led_Disp(ucState);
 107   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    257    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       1
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   MAIN                                                              01/25/2025 07:23:11 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
